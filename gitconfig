# -*- mode: conf; -*-

[user]
    name  = Georgi Valkov
    email = gvalkov@graimatterlabs.ai
    #email = georgi.t.valkov@gmail.com

[apply]
    #whitespace = fix
    #whitespace = nowarn

[push]
    default = tracking
    #default = simple

[color]
    ui = auto
    pager = true
    status = auto
    branch = auto
    diff = true

[status]
    submoduleSummary = true

[core]
    warnambiguousrefs = true
    editor = vim
    #editor = emacsclient
    autocrlf = false
	quotepath = false
	commitGraph = true
    #excludesfile = ~/.gitignore

[diff]
    tool = meld
    algorithm = histogram
    submodule = log
    mnemonicprefix = true

[difftool]
    prompt = false

[merge]
    tool = meld
    conflictStyle = diff3

[mergetool]
    prompt = false

[web]
    browser = firefox

[alias]
    #-----------------------------------------------------------
    a = add
    d = diff
    l = log --decorate --graph --date=short --name-status
    ls = log --decorate --oneline --graph
    p = push
    s = status
    r = remote --verbose
    b = "!git branch --verbose | cut -c -$(tput cols)"
    t = "!git tag -n | cut -c -$(tput cols)"
    #-----------------------------------------------------------

    #-----------------------------------------------------------
    l1 = !git --no-pager log --graph --all --decorate --abbrev-commit --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%cr)%C(reset) %C(white)%s%C(reset) %C(bold white)— %cn%C(reset)%C(bold yellow)%d%C(reset)'
    l2 = !git --no-pager log --graph --all --decorate --abbrev-commit --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%cD%C(reset) %C(bold green)(%cr)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %cn%C(reset)'
    lg = !git --no-pager log --graph --oneline --decorate
    lc = log ORIG_HEAD.. --stat --no-merges # list new commits after merge
    lo = log --oneline
    lon = log --oneline --name-status
    ln = log --name-status
    heads = !"git log origin/master.. --format='%Cred%h%Creset;%C(yellow)%an%Creset;%H;%C(white)%f%Creset' | git name-rev --stdin --always --name-only | column -t -s';'"
    #-----------------------------------------------------------

    #-----------------------------------------------------------
    amend = commit --amend
    difflast = diff HEAD~
    changelog = log --pretty=format:\" * %s\"
    staged = diff --cached
    diffc = diff --cached
    unstage = reset HEAD
    filelog = log -u
    tags = log -l -n1
    summary = log --oneline
    #-----------------------------------------------------------

    #-----------------------------------------------------------
    co = checkout
    ci = commit -m
    ca = commit -a -m
    st = status
    mt = mergetool
    br = branch -a
    nb = checkout -b
    wc = whatchanged
    cp = cherry-pick
    cf = cat-file
    fa = fetch --all
    rh = reset --hard
    #-----------------------------------------------------------
    
    #-----------------------------------------------------------
    sdiff = !git diff && git submodule foreach 'git diff'
    spush = push --recurse-submodules=on-demand
    supdate = submodule update --remote --merge

    #-----------------------------------------------------------
    edit-last-commit = !vim `git diff-tree -r --name-only HEAD HEAD~1`
    edit-unmerged    = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; editor `f`"
    add-unmerged     = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
    #-----------------------------------------------------------

    svnup = !git config --get-regexp 'svn-remote.*url' | cut -d . -f 2 | xargs -n1 git svn fetch

    #-----------------------------------------------------------
    # from https://gist.github.com/492227
    wip = !"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \"[wip]\""
    unwip = !"git log -n 1 | grep -q -c "[wip]" && git reset HEAD~1"
    #-----------------------------------------------------------

    #-----------------------------------------------------------
    lost = "!git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %C(white)%ai%Creset %f' --stdin | awk '/^SHA1/ {sub(\"SHA1: \", \"\"); print}'"
    rm-merged = "!git branch --merged | grep -v '^*' | grep -v 'master' | xargs git branch -d"
    #-----------------------------------------------------------

[gui]
    fontdiff = -family terminus -size 9 -weight normal -slant roman -underline 0 -overstrike 0
    historybrowser = gitg

[credential]
    helper = cache --timeout=86400

[gpg]
    program = "gpg2"
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[gc]
	writeCommitGraph = true
[pull]
	rebase = true
